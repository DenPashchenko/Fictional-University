@model IEnumerable<FictionalUniversityWebApp.Models.Student>

@{
	ViewData["Title"] = "Students";

	int itemsPerPage = 10;

	int currentPage = ViewContext.HttpContext.Request.Query.ContainsKey("page") ? int.Parse(ViewContext.HttpContext.Request.Query["page"]) : 1;

	int totalItems = Model.Count();
	int totalPages = (int)Math.Ceiling((double)totalItems / itemsPerPage);

	var students = Model.Skip((currentPage - 1) * itemsPerPage).Take(itemsPerPage).ToList();
}

<h3>Students</h3>

<div class="my-4 d-flex justify-content-start">
	<a class="btn btn-outline-success pull-right" asp-action="Create">Create new</a>
</div>
<table class="table table-striped table-hover mb-4">
	<thead>
		<tr class="bg-primary text-light">
			<th>
				@Html.DisplayNameFor(model => model.LastName)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.FirstName)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Group)
			</th>
			<th>Actions</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in students)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.LastName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.FirstName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Group.Name)
				</td>
				<td>
					<a class="btn btn-outline-primary btn-sm" asp-action="Edit" asp-route-id="@item.StudentId"><i class="bi bi-pencil me-1"></i>Edit</a> |
					<a class="btn btn-outline-primary btn-sm" asp-action="Details" asp-route-id="@item.StudentId"><i class="bi bi-zoom-in me-1"></i>Details</a> |
					<a class="btn btn-outline-danger btn-sm" asp-action="Delete" asp-route-id="@item.StudentId"><i class="bi bi-trash me-1"></i>Delete</a>
				</td>
			</tr>
		}
	</tbody>
</table>

<nav aria-label="Students pagination">
	<ul class="pagination pagination-sm justify-content-center">
		@if (totalPages > 1)
		{
			<li class="page-item @(currentPage == 1 ? "disabled" : "")">
				<a class="page-link text-primary" asp-action="Index" asp-route-page="1" aria-label="First">
					<span aria-hidden="true">&laquo;</span>
				</a>
			</li>
			<li class="page-item @(currentPage == 1 ? "disabled" : "")">
				<a class="page-link text-primary" asp-action="Index" asp-route-page="@(currentPage - 1)" aria-label="Previous">
					<span aria-hidden="true">&lt;</span>
				</a>
			</li>
			@for (int i = 1; i <= totalPages; i++)
			{
				<li class="page-item @(currentPage == i ? "active" : "")">
					<a class="page-link text-primary" asp-action="Index" asp-route-page="@i">@i</a>
				</li>
			}
			<li class="page-item @(currentPage == totalPages ? "disabled" : "")">
				<a class="page-link text-primary" asp-action="Index" asp-route-page="@(currentPage + 1)" aria-label="Next">
					<span aria-hidden="true">&gt;</span>
				</a>
			</li>
			<li class="page-item @(currentPage == totalPages ? "disabled" : "")">
				<a class="page-link text-primary" asp-action="Index" asp-route-page="@totalPages" aria-label="Last">
					<span aria-hidden="true">&raquo;</span>
				</a>
			</li>
		}
	</ul>
</nav>

<p>
	@Html.ActionLink("Back to course list", "Index", "Course") |
	@Html.ActionLink("Back to group list", "Index", "Group")
</p>
